
# 1 Reencrypt route

oc create route reencrypt cache-service-https-route \
  --port=https \
  --service cache-service

# 2 Call Endpoint

POD_NAME=cache-service-0
oc rsync $POD_NAME:/var/run/secrets/kubernetes.io/serviceaccount/..data/service-ca.crt .

HOSTNAME_FOR_HTTPS_ROUTE=cache-service-https-route-demo-datagrid.apps.cluster-77dc.77dc.sandbox1398.opentlc.com

curl -v -X PUT \
  -u test:test.1 \
  --cacert service-ca.crt \
  -H 'Content-type: text/plain' \
  -d 'world' \
  https://$HOSTNAME_FOR_HTTPS_ROUTE/rest/default/hello


# HotRod route

oc create route passthrough cache-service-hotrod-route \
  --port=hotrod \
  --service cache-service


# 

oc project demo-cache

cd standalone-jar/cache-service/create-cache

oc new-build --binary --strategy=source --name=quickstart -l app=quickstart fabric8/s2i-java:2.3
oc start-build quickstart --from-dir=target/ --follow

export IMAGE=`oc get is quickstart -o jsonpath="{.status.dockerImageRepository}"`

oc run quickstart \
   --image=$IMAGE \
   --replicas=1 \
   --restart=OnFailure \
   --env APP_NAME=cache-service \
   --env CMD=create-cache \
   --env JAVA_OPTIONS=-ea

#

oc project demo-datagrid

cd standalone-jar/datagrid-service/create-cache

oc new-build --binary --strategy=source --name=quickstart -l app=quickstart fabric8/s2i-java:2.3
oc start-build quickstart --from-dir=target/ --follow

export IMAGE=`oc get is quickstart -o jsonpath="{.status.dockerImageRepository}"`

oc run quickstart \
   --image=$IMAGE \
   --replicas=1 \
   --restart=OnFailure \
   --env APP_NAME=datagrid-service \
   --env CMD=create-cache \
   --env JAVA_OPTIONS=-ea